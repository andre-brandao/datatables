{"name":"Field","text":"type Field = keyof Row | ((row: Row) => unknown)","ast":{"name":"Field","kind":"TypeAlias","line":18,"value":{"text":"keyof Row | ((row: Row) => unknown)","kind":"Union","elements":[{"text":"keyof Row","kind":"Operator","elementType":{"text":"Row","kind":"Reference","source":{"line":18,"path":"..\\datatables\\src\\lib\\src\\client\\index.ts"}}},{"text":"(row: Row) => unknown","kind":"Function","return":{"text":"unknown","kind":"Unknown"},"parameters":[{"name":"row","type":{"text":"Row","kind":"Reference","source":{"line":18,"path":"..\\datatables\\src\\lib\\src\\client\\index.ts"}},"line":18}]}]},"typeParameters":[{"name":"Row"}]},"markdown":"\n<p>Either an object key (column name) or a function that takes a row as input and returns a value.</p>\n<h2>Example</h2>\n<pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// keyof Row: </span>\n<span class=\"token string\">'first_name'</span>\n\n<span class=\"token comment\">// expression:</span>\n<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> row<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">+</span> row<span class=\"token punctuation\">.</span>last_name\n\n<span class=\"token comment\">// nested prop</span>\n<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> row<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>login_count<span class=\"token punctuation\">.</span>value</code></pre>\n"}