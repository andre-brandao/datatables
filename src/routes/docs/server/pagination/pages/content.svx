<script>
    import Pages from './Pages.svelte'
    import PagesWithEllipsis from './PagesWithEllipsis.svelte'
    import CurrentPage from './CurrentPage.svelte'
</script>

# Enable pagination

To display pagination buttons, you'll need at least to know the total row count of the dataset (`totalRows`) and `rowsPerPage` parameters.

```ts
const table = new TableHandler(initialData, { rowsPerPage: 10, totalRows: 150 })
```

Most of the time, `totalRows` is given back from the server with each request: 
```json
// api response:
{
    count: 150,
    data: [...]
}
```
`state` exposes a `setTotalRows()` function:
```ts
table.load(async (state) => {
    // [fetching data...]
    state.setTotalRows(json.count)
    return json.data
})

```

## Pages

```svelte
{#each table.pages as page}
    <button type="button">{page}</button>
{/each}
```
<Pages/>


## Pages with ellipsis

```svelte
{#each table.pagesWithEllipsis as page}
    <button type="button">{page ?? '...'}</button>
{/each}
```
<PagesWithEllipsis/>


## Current page
```svelte
<button type="button"
    class:active={page === table.currentPage}
    onclick={() => table.setPage(page)}
>
    {page ?? '...'}
</button>
```

<CurrentPage/>