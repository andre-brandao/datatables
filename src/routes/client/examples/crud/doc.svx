
## Update rows after invalidation

````svelte
<script lang="ts">
    import { TableHandler, Row } from '@vincjo/datatables'
    let { data }: { data: Row[] } = $props()

    const table = new TableHandler(data, { rowsPerPage: 20 })

    $effect(() => {
        data
        table.rows = data
    })
</script>
````

<br><br>

## Maintain vertical scroll state after update

````svelte
<script lang="ts">
    import { TableHandler, Row } from '@vincjo/datatables'
    let { data }: { data: Row[] } = $props()

    let element: HTMLElement | undefined

    const table = new TableHandler(data, { rowsPerPage: 20 })

    $effect(() => {
        data
        update()
    })

    const update = () => {
        if (element) {
            const scrollTop = element.parentNode.scrollTop
            table.rows = data
            setTimeout(() => {
                element.parentNode.scrollTop = scrollTop
            }, 2)
        }
    }
</script>

<Datatable {table}>
    <table bind:this={element}>
        [...]
    </table>
</Datatable>

````


